name: CI

on: [push, pull_request]

jobs:
  host-x64:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: install-dependencies
      run: |
            sudo apt-get update -q -y
            sudo apt-get install -q -y libsdl2-dev libsdl2-mixer-dev
            .ci/riscv-toolchain-install.sh
      shell: bash
    - name: default build
      run: make
    - name: check + tests
      run: |
            make check
            make tests
            make misalign
            make tool
    - name: diverse configurations
      run: |
            make distclean ENABLE_EXT_M=0 check
            make distclean ENABLE_EXT_A=0 check
            make distclean ENABLE_EXT_C=0 check
            make distclean ENABLE_EXT_F=0 check
            make distclean ENABLE_SDL=0 check
    - name: gdbstub test
      run: |
            make distclean ENABLE_GDBSTUB=1 gdbstub-test
    - name: JIT test
      run: |
            make ENABLE_JIT=1 clean check
            make ENABLE_EXT_A=0 ENABLE_JIT=1 clean check
            make ENABLE_EXT_C=0 ENABLE_JIT=1 clean check
            make ENABLE_EXT_F=0 ENABLE_JIT=1 clean check

  host-arm64:
    runs-on: ubuntu-22.04
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - name: build artifact
      # The GitHub Action for non-x86 CPU
      # https://github.com/uraimo/run-on-arch-action
      uses: uraimo/run-on-arch-action@v2.6.0
      with:
        arch: aarch64
        distro: ubuntu22.04
        # No 'sudo' is available
        install: |
          apt-get update -q -y
          apt-get install -q -y git build-essential libsdl2-dev libsdl2-mixer-dev
          git config --global --add safe.directory ${{ github.workspace }}
          git config --global --add safe.directory ${{ github.workspace }}/src/softfloat
          git config --global --add safe.directory ${{ github.workspace }}/src/mini-gdbstub
        # Append custom commands here
        run: |
          make
          make check
          make ENABLE_JIT=1 clean check
          make ENABLE_EXT_A=0 ENABLE_JIT=1 clean check
          make ENABLE_EXT_C=0 ENABLE_JIT=1 clean check
          make ENABLE_EXT_F=0 ENABLE_JIT=1 clean check

  coding-style:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: coding convention
      run: |
            sudo apt-get install -q -y clang-format-12
            .ci/check-newline.sh
            .ci/check-format.sh
      shell: bash
